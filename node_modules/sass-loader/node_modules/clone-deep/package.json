{
  "name": "clone-deep",
  "description": "Recursively (deep) clone JavaScript native types, like Object, Array, RegExp, Date as well as primitives.",
  "version": "0.2.4",
  "homepage": "https://github.com/jonschlinkert/clone-deep",
  "author": {
    "name": "Jon Schlinkert",
    "url": "https://github.com/jonschlinkert"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/jonschlinkert/clone-deep"
  },
  "bugs": {
    "url": "https://github.com/jonschlinkert/clone-deep/issues"
  },
  "license": "MIT",
  "files": [
    "index.js",
    "utils.js"
  ],
  "main": "index.js",
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "mocha"
  },
  "dependencies": {
    "for-own": "^0.1.3",
    "is-plain-object": "^2.0.1",
    "kind-of": "^3.0.2",
    "lazy-cache": "^1.0.3",
    "shallow-clone": "^0.1.2"
  },
  "devDependencies": {
    "mocha": "*",
    "should": "*"
  },
  "keywords": [
    "array",
    "clone",
    "clone-array",
    "clone-array-deep",
    "clone-date",
    "clone-deep",
    "clone-object",
    "clone-object-deep",
    "clone-reg-exp",
    "date",
    "deep",
    "exp",
    "for",
    "for-in",
    "for-own",
    "javascript",
    "mixin",
    "mixin-object",
    "object",
    "own",
    "reg",
    "util",
    "utility"
  ],
  "verb": {
    "related": {
      "list": []
    },
    "plugins": [
      "gulp-format-md"
    ]
  },
  "readme": "# clone-deep [![NPM version](https://img.shields.io/npm/v/clone-deep.svg)](https://www.npmjs.com/package/clone-deep) [![Build Status](https://img.shields.io/travis/jonschlinkert/clone-deep.svg)](https://travis-ci.org/jonschlinkert/clone-deep)\n\n> Recursively (deep) clone JavaScript native types, like Object, Array, RegExp, Date as well as primitives.\n\nThe `instanceClone` function is invoked to clone objects that are not \"plain\" objects (as defined by [](#isPlainObject)`isPlainObject`) if it is provided. If `instanceClone` is not specified, it will not attempt to clone non-plain objects, and will copy the object reference.\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/)\n\n```sh\n$ npm i clone-deep --save\n```\n\n## Usage\n\n```js\nvar cloneDeep = require('clone-deep');\n\nvar obj = {a: 'b'};\nvar arr = [obj];\n\nvar copy = cloneDeep(arr);\nobj.c = 'd';\n\nconsole.log(copy);\n//=> [{a: 'b'}]\n\nconsole.log(arr);\n//=> [{a: 'b', c: 'd'}]\n```\n\n## Other object utils\n\n* [assign-deep](https://www.npmjs.com/package/assign-deep): Deeply assign the enumerable properties and/or es6 Symbol properies of source objects to the target… [more](https://www.npmjs.com/package/assign-deep) | [homepage](https://github.com/jonschlinkert/assign-deep)\n* [extend-shallow](https://www.npmjs.com/package/extend-shallow): Extend an object with the properties of additional objects. node.js/javascript util. | [homepage](https://github.com/jonschlinkert/extend-shallow)\n* [merge-deep](https://www.npmjs.com/package/merge-deep): Recursively merge values in a javascript object. | [homepage](https://github.com/jonschlinkert/merge-deep)\n* [mixin-deep](https://www.npmjs.com/package/mixin-deep): Deeply mix the properties of objects into the first object. Like merge-deep, but doesn't clone. | [homepage](https://github.com/jonschlinkert/mixin-deep)\n* [mixin-object](https://www.npmjs.com/package/mixin-object): Mixin the own and inherited properties of other objects onto the first object. Pass an… [more](https://www.npmjs.com/package/mixin-object) | [homepage](https://github.com/jonschlinkert/mixin-object)\n* [shallow-clone](https://www.npmjs.com/package/shallow-clone): Make a shallow clone of an object, array or primitive. | [homepage](https://github.com/jonschlinkert/shallow-clone)\n\n## Running tests\n\nInstall dev dependencies:\n\n```sh\n$ npm i -d && npm test\n```\n\n## Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](https://github.com/jonschlinkert/clone-deep/issues/new).\n\n## Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](http://twitter.com/jonschlinkert)\n\nBased on [mout's](https://github.com/mout/mout) implementation of deepClone.\n\n## License\n\nCopyright © 2014-2015 [Jon Schlinkert](https://github.com/jonschlinkert)\nReleased under the MIT license.\n\n***\n\n_This file was generated by [verb](https://github.com/verbose/verb) on December 23, 2015._\n\n<!-- deps:helper-lookup-deps -->",
  "readmeFilename": "README.md",
  "_id": "clone-deep@0.2.4",
  "dist": {
    "shasum": "f89a3461c5b1c4bd2af45a3af746957d9bfef40c"
  },
  "_from": "clone-deep@^0.2.4",
  "_resolved": "https://registry.npmjs.org/clone-deep/-/clone-deep-0.2.4.tgz"
}
